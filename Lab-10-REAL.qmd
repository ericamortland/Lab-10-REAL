---
project: 
  type: website
  output-dir: docs
  title: "Lab 10: Distances and the Border Zone"
  author: Erica Mortland
  date: "`r Sys.Date()`"

format:
  html:
    self-contained: true
    toc: true
    toc-depth: 2
    code-fold: true
    code-tools: true
    number-sections: true
    theme: cosmo
    highlight-style: github
---

```{r}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

```{r}
library(tidyverse)
library(sf)
library(units)
library(AOI)
library(ggrepel)
library(knitr)
library(gghighlight)
library(remotes)
library(readr)
library(rnaturalearth)
library(USAboundaries)
library(ggthemes)
theme_set(theme_map())
```

```{r}

remotes::install_github("ropensci/USAboundaries")

remotes::install_github("ropensci/USAboundariesData")

remotes::install_github("mikejohnson51/AOI")

remotes::install_github("ropenscilabs/rnaturalearthdata")

```

## 1.1

### Define a conic projection centered over the continental US

```{r}
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'
```

## 1.2

```{r}
states <- aoi_get(state = "conus")
states_eqdc <- st_transform(states, crs = eqdc)
```

## 1.3

```{r, results='hide'}
aoi_get(country = c("MX", "CA", "USA"))

eqdc <- st_crs(5070)

countries <- rnaturalearth::countries110 |>
  st_transform(eqdc)

countries <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") |>
  filter(admin %in% c("Mexico", "Canada", "United States of America")) |>
  st_transform(eqdc)

```

## 1.4

```{r}
cities_raw <- read_csv("data/uscities.csv")

glimpse(cities_raw)
library(readr)
cities <- read_csv("data/uscities.csv", show_col_types = FALSE)|>
  st_as_sf(coords = c("lng", "lat"), crs = 4326)|>
  st_transform(eqdc)

```

## Question 2

```{r}
library(tidyverse)
library(sf)
library(units)
library(flextable)

# Create a MULTILINESTRING object from all state borders
state_borders <- states |> 
  st_geometry() |> 
  st_combine() |> 
  st_cast("MULTILINESTRING")

state_borders_eqdc <- state_borders |> st_transform(eqdc)
cities_eqdc <- cities |> st_transform(eqdc)

# Compute distances
cities_eqdc$dist_to_state_border <- st_distance(cities_eqdc, state_borders_eqdc) |>
  set_units("km") |> 
  drop_units()

top5_state_border <- cities_eqdc |> 
  select(city, state_name, dist_to_state_border) |> 
  arrange(desc(dist_to_state_border)) |> 
  slice_head(n = 5)

flextable(top5_state_border)
```

```{r}

usa_outline_eqdc <- states |> 
  st_union() |> 
  st_cast("MULTILINESTRING") |>
  st_transform(eqdc)

cities$dist_to_national_border <- st_distance(cities, usa_outline_eqdc) |>
  set_units("km") |>
  drop_units()

top5_national <- cities |>  
  select(city, state_name, dist_to_national_border) |> 
  arrange(desc(dist_to_national_border)) |> 
  slice_head(n = 5)

flextable(top5_national)
```

```{r}
states_eqdc <- states |> st_transform(eqdc)
countries_eqdc <- countries |> st_transform(eqdc)
mexico_border <- countries |> filter(admin == "Mexico") |> 
  st_union() |> 
  st_cast("MULTILINESTRING")

cities$dist_to_mexico <- st_distance(cities, mexico_border) |>
  set_units("km") |>
  drop_units()

top5_mexico <- cities |> 
  select(city, state_name, dist_to_mexico) |> 
  arrange(desc(dist_to_mexico)) |> 
  slice_head(n = 5)

flextable(top5_mexico)
```

```{r}
canada_border <- countries |> filter(admin == "Canada") |> 
  st_union() |> 
  st_cast("MULTILINESTRING")

cities$dist_to_canada <- st_distance(cities, canada_border) |>
  set_units("km") |>
  drop_units()

top5_canada <- cities |> 
  select(city, state_name, dist_to_canada) |> 
  arrange(desc(dist_to_canada)) |> 
  slice_head(n = 5)

flextable(top5_canada)
```

## Question 3

```{r}
top10_cities <- cities |> 
  slice_max(population, n = 10)

ggplot() +
  geom_sf(data = countries, fill = "grey95", color = "gray80") +
  geom_sf(data = states, fill = NA, color = "black", linetype = "dotted", size = 0.4) +
  geom_sf(data = states, fill = NA, lty = 2, size = 0.3) +
  geom_sf(data = top10_cities, color = "red", size = 2) +
  ggrepel::geom_label_repel(data = top10_cities,
                            aes(geometry = geometry, label = city),
                            stat = "sf_coordinates",
                            label.size = 0.2) +
  theme_void() +
  labs(title = "Top 10 Most Populous U.S. Cities")

top10_table <- top10_cities |> 
  st_drop_geometry() |> 
  select(city, state_name, population)

flextable(top10_table)
```

```{r}
top5_natl <- cities |> 
  slice_max(dist_to_national_border, n = 5)

ggplot() +
  geom_sf(data = states, fill = NA, color = "black") +
  geom_sf(data = cities, aes(color = dist_to_national_border), size = 1) +
  geom_sf(data = top5_natl, color = "red", size = 2) +
  ggrepel::geom_label_repel(data = top5_natl,
                            aes(geometry = geometry, label = city),
                            stat = "sf_coordinates",
                            label.size = 0.2) +
  scale_color_viridis_c() +
  labs(color = "Distance to National Border (km)") +
  theme_void() +
  theme(legend.position = "right")
```

```{r}
state_borders <- st_transform(state_borders, st_crs(cities))

cities$dist_to_state_border <- st_distance(cities, state_borders) |>
  set_units("km") |>
  drop_units()

top5_state <- cities |> 
  slice_max(order_by = dist_to_state_border, n = 5)

ggplot() +
  geom_sf(data = states, fill = NA, color = "gray60", linewidth = 0.3) +
  geom_sf(data = cities, aes(color = dist_to_state_border), size = 1) +
  geom_sf(data = top5_state, color = "blue", size = 2) +
  ggrepel::geom_label_repel(data = top5_state,
                            aes(geometry = geometry, label = city),
                            stat = "sf_coordinates",
                            label.size = 0.2) +
  scale_color_viridis_c() +
  labs(color = "Distance to State Border (km)") +
  ggthemes::theme_map() +
  theme(legend.position = "right")
```

```{r}
cities <- cities |> 
  mutate(can_mx_diff = as.numeric(abs(dist_to_canada - dist_to_mexico)))

cities <- cities |> 
  mutate(can_mx_diff = abs(dist_to_canada - dist_to_mexico))

equidist_cities <- cities |> 
  filter(can_mx_diff < 100)

top5_equidist <- equidist_cities |> 
  slice_max(population, n = 5)
```

```{r}
ggplot() +
  geom_sf(data = states, fill = NA, color = "grey60", linewidth = 0.3) +
  geom_sf(data = cities, aes(color = can_mx_diff), size = 0.8) +
  geom_sf(data = top5_equidist, color = "red", size = 2) +
  ggrepel::geom_label_repel(data = top5_equidist,
                            aes(geometry = geometry, label = city),
                            stat = "sf_coordinates",
                            label.size = 0.2) +
  scale_color_viridis_c() +
  gghighlight(can_mx_diff < 100) +
  labs(color = "Canadaâ€“Mexico Distance Diff (km)") +
  ggthemes::theme_map() +
  theme(legend.position = "right")
```

```{r}
flextable(top5_equidist |> st_drop_geometry() |> 
            select(city, state_name, population, can_mx_diff))

```

## Question 4

```{r}
border <- st_union(st_geometry(canada_border), st_geometry(mexico_border)) |> 
  st_cast("MULTILINESTRING")

cities$border_km <- set_units(st_distance(cities, border), "km") |> drop_units()

danger_zone <- cities |> filter(border_km <= 160)

total_cities <- nrow(cities)
total_pop <- sum(cities$population, na.rm = TRUE)
danger_zone_cities <- nrow(danger_zone)
danger_zone_pop <- sum(danger_zone$population, na.rm = TRUE)
percent_pop <- 100 * danger_zone_pop / total_pop

border_zone_summary <- tibble(
  `Total Cities` = total_cities,
  `Cities in 100 Mile Zone` = danger_zone_cities,
  `Population in Zone` = danger_zone_pop,
  `Total Population` = total_pop,
  `% in Zone` = round(percent_pop, 2)
)

knitr::kable(border_zone_summary)
```

```{r}
ggplot() +
  geom_sf(data = states, fill = NA, color = "gray50") +
  geom_sf(data = cities, aes(color = population), alpha = 0.3) +
  geom_sf(data = danger_zone, aes(color = population)) +
  gghighlight(border_km <= 160) +
  scale_color_viridis_c(option = "magma", trans = "log10") +
  geom_label_repel(
    data = danger_zone |> slice_max(population, n = 10),
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    size = 3
  ) +
  labs(
  title = "U.S. Cities in the Danger Zone (100 miles from Border)",
  subtitle = "Most Populous City in Each State"
) +
  theme_minimal()
```

```{r}
top_per_state <- danger_zone |> 
  group_by(state_name) |> 
  slice_max(population, n = 1) |> 
  ungroup()

ggplot() +
  geom_sf(data = states, fill = NA, color = "gray50") +
  geom_sf(data = danger_zone, aes(color = population)) +
  geom_sf(data = top_per_state, color = "red", size = 2) +
  geom_label_repel(
    data = top_per_state,
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    size = 3
  ) +
  labs(
    title = "Most Populous City in Each State within the Danger Zone",
    subtitle = "Cities within 100 miles of Canada or Mexico",
    color = "Population"
  ) +
  scale_color_viridis_c(option = "magma", trans = "log10") +
  theme_minimal()
```



